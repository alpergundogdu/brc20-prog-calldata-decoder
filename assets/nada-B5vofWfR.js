var u={};Object.defineProperty(u,"__esModule",{value:!0});u.encode=f;var d=u.decode=l;u.decode_with_limit=x;function f(o){const t=[];let e=0;for(let n=0;n<=o.length;n++){const i=o[n];i===0?(e++,e===255&&(t.push(255,255),e=0)):(e>0&&(e==1?t.push(0):e==2?t.push(0,0):t.push(255,e),e=0),i===255?o[n+1]===255?(t.push(255,2),n++):t.push(255,1):i!==void 0&&t.push(i))}return e>0&&(e==1?t.push(0):e==2?t.push(0,0):t.push(255,e),e=0),Uint8Array.from(t)}function l(o){return x(o,Number.MAX_SAFE_INTEGER)}function x(o,t){const e=[];for(let n=0;n<o.length;n++){const i=o[n];if(i===255){const r=o[++n];if(r===0)throw new Error("invalid nada sequence: 0xFF 0x00");if(r===void 0)throw new Error("unexpected end of input");if(r===1)e.push(255);else if(r===2)e.push(255,255);else if(r>=3&&r<=255)for(let s=0;s<r;s++)e.push(0);else throw new Error(`invalid nada byte: 0x${r.toString(16)}`)}else e.push(i);if(e.length>t)throw new Error(`output length exceeded limit: ${t}`)}return Uint8Array.from(e)}const F=Object.freeze(Object.defineProperty({__proto__:null,decode:d,default:u},Symbol.toStringTag,{value:"Module"}));export{F as n};
